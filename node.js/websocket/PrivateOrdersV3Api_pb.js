// source: PrivateOrdersV3Api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.PrivateOrdersV3Api', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PrivateOrdersV3Api = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PrivateOrdersV3Api, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PrivateOrdersV3Api.displayName = 'proto.PrivateOrdersV3Api';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PrivateOrdersV3Api.prototype.toObject = function(opt_includeInstance) {
  return proto.PrivateOrdersV3Api.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PrivateOrdersV3Api} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PrivateOrdersV3Api.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
clientid: jspb.Message.getFieldWithDefault(msg, 2, ""),
price: jspb.Message.getFieldWithDefault(msg, 3, ""),
quantity: jspb.Message.getFieldWithDefault(msg, 4, ""),
amount: jspb.Message.getFieldWithDefault(msg, 5, ""),
avgprice: jspb.Message.getFieldWithDefault(msg, 6, ""),
ordertype: jspb.Message.getFieldWithDefault(msg, 7, 0),
tradetype: jspb.Message.getFieldWithDefault(msg, 8, 0),
ismaker: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
remainamount: jspb.Message.getFieldWithDefault(msg, 10, ""),
remainquantity: jspb.Message.getFieldWithDefault(msg, 11, ""),
lastdealquantity: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
cumulativequantity: jspb.Message.getFieldWithDefault(msg, 13, ""),
cumulativeamount: jspb.Message.getFieldWithDefault(msg, 14, ""),
status: jspb.Message.getFieldWithDefault(msg, 15, 0),
createtime: jspb.Message.getFieldWithDefault(msg, 16, 0),
market: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
triggertype: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
triggerprice: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
state: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
ocoid: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
routefactor: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
symbolid: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
marketid: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
marketcurrencyid: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
currencyid: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PrivateOrdersV3Api}
 */
proto.PrivateOrdersV3Api.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PrivateOrdersV3Api;
  return proto.PrivateOrdersV3Api.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PrivateOrdersV3Api} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PrivateOrdersV3Api}
 */
proto.PrivateOrdersV3Api.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvgprice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrdertype(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTradetype(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmaker(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemainamount(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemainquantity(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastdealquantity(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCumulativequantity(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCumulativeamount(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarket(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTriggertype(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerprice(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setOcoid(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoutefactor(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbolid(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketcurrencyid(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PrivateOrdersV3Api.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PrivateOrdersV3Api.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PrivateOrdersV3Api} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PrivateOrdersV3Api.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAvgprice();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOrdertype();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTradetype();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getIsmaker();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getRemainamount();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRemainquantity();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCumulativequantity();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCumulativeamount();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clientId = 2;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string price = 3;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quantity = 4;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getQuantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string amount = 5;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string avgPrice = 6;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getAvgprice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setAvgprice = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 orderType = 7;
 * @return {number}
 */
proto.PrivateOrdersV3Api.prototype.getOrdertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setOrdertype = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 tradeType = 8;
 * @return {number}
 */
proto.PrivateOrdersV3Api.prototype.getTradetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setTradetype = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool isMaker = 9;
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.getIsmaker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setIsmaker = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string remainAmount = 10;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getRemainamount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setRemainamount = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string remainQuantity = 11;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getRemainquantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setRemainquantity = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string lastDealQuantity = 12;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getLastdealquantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setLastdealquantity = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearLastdealquantity = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasLastdealquantity = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string cumulativeQuantity = 13;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getCumulativequantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setCumulativequantity = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string cumulativeAmount = 14;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getCumulativeamount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setCumulativeamount = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 status = 15;
 * @return {number}
 */
proto.PrivateOrdersV3Api.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 createTime = 16;
 * @return {number}
 */
proto.PrivateOrdersV3Api.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string market = 17;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getMarket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setMarket = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearMarket = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 triggerType = 18;
 * @return {number}
 */
proto.PrivateOrdersV3Api.prototype.getTriggertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setTriggertype = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearTriggertype = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasTriggertype = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string triggerPrice = 19;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getTriggerprice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setTriggerprice = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearTriggerprice = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasTriggerprice = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int32 state = 20;
 * @return {number}
 */
proto.PrivateOrdersV3Api.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setState = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearState = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasState = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string ocoId = 21;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getOcoid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setOcoid = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearOcoid = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasOcoid = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string routeFactor = 22;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getRoutefactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setRoutefactor = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearRoutefactor = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasRoutefactor = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string symbolId = 23;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getSymbolid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setSymbolid = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearSymbolid = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasSymbolid = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string marketId = 24;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setMarketid = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearMarketid = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasMarketid = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string marketCurrencyId = 25;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getMarketcurrencyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setMarketcurrencyid = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearMarketcurrencyid = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasMarketcurrencyid = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string currencyId = 26;
 * @return {string}
 */
proto.PrivateOrdersV3Api.prototype.getCurrencyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.setCurrencyid = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.PrivateOrdersV3Api} returns this
 */
proto.PrivateOrdersV3Api.prototype.clearCurrencyid = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PrivateOrdersV3Api.prototype.hasCurrencyid = function() {
  return jspb.Message.getField(this, 26) != null;
};


goog.object.extend(exports, proto);
